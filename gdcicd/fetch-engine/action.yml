name: 'Godot Download Engine'
description: 'Downloads Godot engine binaries and export templates by tag from GitHub releases'

inputs:
  godot_release_tag:
    description: 'GitHub release tag for Godot engine (e.g., "4.4.1-stable")'
    # This should match the tag format used in Godot releases
    # For example, "4.4.1-stable" for Godot 4.4.1 stable release
    # https://github.com/godotengine/godot/tags
    required: true
    default: "Latest"

  target_release_asset:
    description: 'Target executable Godot engine from release(e.g., "linux.x86_64", "windows.x86_64")'
    # This should match the naming convention used in Godot releases
    # For example, "linux.x86_64" for Linux, "windows.x86_64" for Windows, etc.
    # https://github.com/godotengine/godot/releases
    required: true
    default: "linux.x86_64"

  output_path:
    description: 'Path and filename for the downloaded Godot executable'
    # Output path for the downloaded Godot binary
    required: true
    default: "GodotEngine"

runs:
  using: 'composite'
  steps:
    - name: 📋 Engine Manifest 📋
      run: |
        set -e
        echo "godot_release_tag: ${{ inputs.godot_release_tag }}"
        echo "target_release_asset: ${{ inputs.target_release_asset }}"
        echo "output_path: ${{ inputs.output_path }}"
      shell: bash

    - name: 🛰️ Fetching Godot Release Assets 🛰️
      run: |
        set -e
        GH_API="https://api.github.com/repos/godotengine/godot-builds/releases/tags/${{ inputs.godot_release_tag }}"
        ASSET_URL=$(curl -s "$GH_API" | jq -r ".assets[] | select(.name | test(\"${{ inputs.target_release_asset }}.zip$\") ) | .browser_download_url")
        TEMPLATES_URL=$(curl -s "$GH_API" | jq -r '.assets[] | select(.name | test("export_templates.tpz$")) | .browser_download_url')
        wget -q "$ASSET_URL" -O godot.zip
        wget -q "$TEMPLATES_URL" -O templates.tpz
        echo "Downloaded files:"
        ls -lh godot.zip templates.tpz
      shell: bash

    - name: 🪄 Magically make more data from less data 🪄
      run: |
        set -e
        unzip -j godot.zip -d .
        unzip templates.tpz -d templates
        echo "Contents of templates directory:"
        ls -lh templates
      shell: bash

    - name: 🏗️ Assembling Workspace 🏗️
      run: |
        set -e
        EXECUTABLE=$(ls Godot*${{ inputs.target_release_asset }}* | head -n1)
        echo "Moving engine binary: $EXECUTABLE -> ${{ inputs.output_path }}"
        mv "$EXECUTABLE" "${{ inputs.output_path }}"
        mkdir -p ~/.local/share/godot/export_templates/${{ inputs.godot_release_tag }}
        echo "Moving export templates to Godot templates directory..."
        mv templates/* ~/.local/share/godot/export_templates/${{ inputs.godot_release_tag }}/
        echo "Final templates directory contents:"
        ls -lh ~/.local/share/godot/export_templates/${{ inputs.godot_release_tag }}
      shell: bash

    - name: 🦜 Engine Download Recap 🦜
      run: |
        set -e
        echo "Godot binary details:"
        ls -lh "${{ inputs.output_path }}"
        echo "Export templates installed to:"
        ls -lh ~/.local/share/godot/export_templates/${{ inputs.godot_release_tag }}
      shell: bash